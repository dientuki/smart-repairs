/*
@tailwind base;
*/
@tailwind components;
@tailwind utilities;

::-webkit-scrollbar {
  width: 5px;
}
::-webkit-scrollbar-track {
  background: transparent;
}
::-webkit-scrollbar-thumb {
  background-color: rgba(155, 155, 155, 0.5);
  border-radius: 20px;
  border: transparent;
}

.modal {
  position: fixed;
  inset: 0;
  z-index: 40; /* Cambia el z-index a 40 */
  background-color: rgba(17, 24, 39, 0.5); /* bg-gray-950/50 en Tailwind */
  /* Para el modo oscuro, puedes usar una clase adicional o manejarlo con JavaScript */
  transition: 250ms ease-in-out opacity;
  opacity: 1;
}
.modal:not(.modal--active) {
  opacity: 0;
  pointer-events: none;
}

.dark .modal {
  background-color: rgba(
    17,
    24,
    39,
    0.75
  ); /* dark:bg-gray-950/75 en Tailwind */
}

.modal__container {
  position: absolute;
  inset: 0;

  display: grid;
  cursor: pointer;

  overflow: auto;
  overscroll-behavior: contain;
}

.modal .modal__container:nth-child(n+2) {
  background-color: rgba(17, 24, 39, .5);
}

.dark .modal .modal__container:nth-child(n+2) {
  background-color: rgba(17, 24, 39, .75);
}

.modal:not(.modal--active) .modal__container {
  overflow: hidden;
}

.modal__inner {
  display: grid;
}

.Toastify__toast-body > div:first-letter{
    text-transform: uppercase;
}

input[type="number"] {
  text-align: right;
  padding-right: 10px; /* Ajusta el valor seg√∫n sea necesario */
}

.MuiFormControl-root input,
.MuiFormControl-root input:focus {
  outline: none;
  box-shadow: none;
  border-color: transparent;
}

.dark .MuiFormControl-root input,
.dark .MuiFormControl-root input:focus,
.dark .MuiFormControl-root svg {
  color: #ffffff
}

.dark .MuiAutocomplete-popper [role="listbox"]{
  background: #111827;
}

.dark .MuiAutocomplete-popper [role="listbox"] .Mui-focused {
  background: #9ec8fb;
  color: #3b3b3b;
}

/* initial */
.react-pattern-lock__pattern-wrapper
.react-pattern-lock__connector-wrapper
.react-pattern-lock__connector {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-500),var(--tw-bg-opacity))
}

.react-pattern-lock__pattern-wrapper
.react-pattern-lock__point-wrapper
.react-pattern-lock__point
.react-pattern-lock__point-inner {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-500),var(--tw-bg-opacity))
}


/* success */
.react-pattern-lock__pattern-wrapper.success
.react-pattern-lock__connector-wrapper
.react-pattern-lock__connector {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--success-600),var(--tw-bg-opacity))
}

.react-pattern-lock__pattern-wrapper.success
.react-pattern-lock__point-wrapper.selected
.react-pattern-lock__point
.react-pattern-lock__point-inner {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--success-600),var(--tw-bg-opacity))
}

.react-pattern-lock__pattern-wrapper.success
.react-pattern-lock__point-wrapper
.react-pattern-lock__point
.react-pattern-lock__point-inner {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-500),var(--tw-bg-opacity))
}



/* error */
.react-pattern-lock__pattern-wrapper.error
.react-pattern-lock__connector-wrapper
.react-pattern-lock__connector {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--danger-600),var(--tw-bg-opacity))
}

.react-pattern-lock__pattern-wrapper.error
.react-pattern-lock__point-wrapper.selected
.react-pattern-lock__point
.react-pattern-lock__point-inner {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--danger-600),var(--tw-bg-opacity))
}

.react-pattern-lock__pattern-wrapper.error
.react-pattern-lock__point-wrapper
.react-pattern-lock__point
.react-pattern-lock__point-inner {
  --tw-bg-opacity: 1;
  background-color: rgba(var(--gray-500),var(--tw-bg-opacity))
}

/*

.react-pattern-lock__pattern-wrapper.error
.react-pattern-lock__point-wrapper.selected
.react-pattern-lock__point
.react-pattern-lock__point-inner {
background: red !important;
}
.react-pattern-lock__pattern-wrapper
.react-pattern-lock__point-wrapper
.react-pattern-lock__point
.react-pattern-lock__point-inner {
background: blue !important;
}

.react-pattern-lock__pattern-wrapper.error
.react-pattern-lock__connector-wrapper
.react-pattern-lock__connector {
background: green !important;
}


.react-pattern-lock__pattern-wrapper
.react-pattern-lock__connector-wrapper
.react-pattern-lock__connector {
background: black !important;
}
*/
/*
textarea {
  field-sizing: content;
}

*/