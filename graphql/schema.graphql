"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    brands: [Brand!] @all @orderBy(column: "name", direction: ASC)
    deviceTypes: [DeviceType!] @all @orderBy(column: "name", direction: ASC)
    orders: [Orders!]!
        @field(resolver: "Order@getActiveOrders")
        @namespace(field: "App\\Models")
    order(id: ID @eq): Order! @find
}

type Mutation {
    updateOrderStatus(id: String, status: String!): Boolean!
        @field(resolver: "OrderMutation@updateStatus")
        @namespace(field: "App\\GraphQL\\Mutations")
    updateCommentVisibility(commentId: String, isPublic: Boolean!): Boolean!
        @field(resolver: "CommentMutation@updateVisibility")
        @namespace(field: "App\\GraphQL\\Mutations")
    updateComment(commentId: String, text: String): Boolean!
        @field(resolver: "CommentMutation@updateText")
        @namespace(field: "App\\GraphQL\\Mutations")
    deleteComment(commentId: String): Boolean!
        @field(resolver: "CommentMutation@delete")
        @namespace(field: "App\\GraphQL\\Mutations")
    addComment(orderId: String, isPublic: Boolean, comment: String): Comment!
        @field(resolver: "CommentMutation@create")
        @namespace(field: "App\\GraphQL\\Mutations")
    addOrder(order: OrderInput): Order!
        @field(resolver: "OrderMutation@create")
        @namespace(field: "App\\GraphQL\\Mutations")
}

#import customer.graphql
#import device.graphql
#import deviceTypeCheck.graphql
#import deviceUnit.graphql

type Brand {
    "Unique primary key."
    id: ID!
    "Non-unique name."
    name: String!
    imageUrl: String!
    label: String!
}

input OrderInput {
    customer_id: String!
    device_unit_id: String!
    observation: String!
}

type Order {
    id: ID!
    status: String!,
    customer: Customer!
    device_unit: DeviceUnit!
    created_at: DateTime!
    observation: String!
    comments: [Comment!]
}

type Orders {
    id: ID!
    team_id: ID!
    status: String!,
    customer: Customer!
    device_unit: DeviceUnit!
    created_at: DateTime!
    observation: String!
    comments: [Comment!]
}

type Comment {
    id: ID!
    comment: String!
    created_at: DateTime!
    is_public: Boolean
    user: User
    user_id: ID!
    was_edited: Boolean
}

type User {
    id: ID!
    name: String!
    email: String!
}

type DeviceRepaired {
    id: ID!
    commercial_name: String!
    tech_name: String!
    brand: Brand!
    device_type: DeviceType!
    deviceUnit: DeviceUnit!
}

type DeviceType {
    id: ID!
    name: String!
    imageUrl: String!
    label: String!
}