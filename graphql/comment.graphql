extend type Mutation {
    updateCommentVisibility(commentId: String, isPublic: Boolean!): Boolean!
        @field(resolver: "CommentMutation@updateVisibility")
        @namespace(field: "App\\GraphQL\\Mutations")
    updateComment(commentId: String, text: String): Boolean!
        @field(resolver: "CommentMutation@updateText")
        @namespace(field: "App\\GraphQL\\Mutations")
    deleteComment(commentId: String): Boolean!
        @field(resolver: "CommentMutation@delete")
        @namespace(field: "App\\GraphQL\\Mutations")
    addComment(orderId: String, comment: CommentInput): Comment!
        @field(resolver: "CommentMutation@create")
        @namespace(field: "App\\GraphQL\\Mutations")
}

type Comment {
    id: ID!
    comment: String!
    created_at: DateTime!
    is_public: Boolean
    user: User
    user_id: ID!
    was_edited: Boolean
}

input CommentInput {
    comment: String! @rules(apply: ["required"])
    ispublic: Boolean! @rules(apply: ["required"])
}