union UpdateBudgetResult = UpdateBudgetPayload | ErrorPayload

extend type Query {
    budget(orderId: ID): [Budget]
        @field(resolver: "BudgetQueries@getBudget")
        @namespace(field: "App\\GraphQL\\Queries")
}

extend type Mutation {
    updateBudget(orderId: String!, budgetItems: [BudgetItemInput!]!): UpdateBudgetResult
        @field(resolver: "BudgetMutations@updateBudget")
        @namespace(field: "App\\GraphQL\\Mutations")
}

type UpdateBudgetPayload {
    success: Boolean!
}

input BudgetResumeInput {
    id: String
    orderId: String!
    total: Float!
    subtotal: Float!
    discount: Float!
}

input BudgetItemInput {
  id: String
  itemableId: String!
  itemableType: String!
  quantity: Int!
  unitPrice: Float!
  includeInSum: Boolean!
}

type Budget {
    id: ID!
    subtotal: Float!
    discount: Float!
    items: [BudgetItem]
}

type BudgetItem {
    id: String!
    itemable_id: String!
    itemable_type: String!
    quantity: Int!
    unit_price: Float!
    item_total: Float!
    include_in_sum: Boolean!
}