extend type Query {
    customers: [Customer!]! @orderBy(column: "first_name", direction: ASC)
        @field(resolver: "Customer@getCustomers")
        @namespace(field: "App\\Models")
}

type Mutation {
    addCustomer(customer: CustomerInput): Customer!
        @field(resolver: "CustomerMutation@create")
        @namespace(field: "App\\GraphQL\\Mutations")
    updateCustomer(customerId: String, customer: CustomerInput): Boolean!
        @field(resolver: "CustomerMutation@update")
        @namespace(field: "App\\GraphQL\\Mutations")
}

input CustomerInput {
    firstname: String! @rules(apply: ["required"])
    lastname: String! @rules(apply: ["required"])
    phone: String! @rules(apply: ["required_without:email", "regex:\/^\\+?\\d+(-\\d+)*$\/"])
    email: String! @rules(apply: ["required_without:phone","email"])
}

type Customer {
    id: ID!
    first_name: String!
    last_name: String!
    fullName: String!
    phone: String!
    email: String!
}